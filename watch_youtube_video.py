import asyncio
from playwright.async_api import async_playwright
import random
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# ูุงุฆูุฉ User-Agent ููุญุงูุงุฉ ุงูุชุตูุญ ุงูุทุจูุนู
USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5735.110 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 10; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5043.102 Mobile Safari/537.36",
]

async def watch_youtube_video(video_url, proxy=None):
    """
    ูุญุงูุงุฉ ูุดุงูุฏุฉ ููุฏูู ุนูู YouTube ูุถูุงู ุชุณุฌูู ูุดุงูุฏุฉ.
    
    Args:
        video_url (str): ุฑุงุจุท ุงูููุฏูู.
        proxy (str): ุฅุนุฏุงุฏุงุช ุงูุจุฑููุณู (ุงุฎุชูุงุฑู).
    """
    async with async_playwright() as p:
        # ุฅุนุฏุงุฏ ุงููุชุตูุญ
        browser_args = ["--no-sandbox", "--disable-setuid-sandbox"]
        if proxy:
            # ุฅุนุฏุงุฏ ุงูุจุฑููุณู ุฅุฐุง ุชู ุชูุฑูุฑู
            browser_args.append(f"--proxy-server={proxy}")

        # ุชุดุบูู ุงููุชุตูุญ ูู ูุถุน headless
        browser = await p.chromium.launch(headless=True, args=browser_args)
        context = await browser.new_context(user_agent=random.choice(USER_AGENTS))
        page = await context.new_page()

        try:
            # ูุชุญ ุงูููุฏูู
            print(f"๐ ูุชุญ ุงูููุฏูู: {video_url}")
            await page.goto(video_url, timeout=60000)
            print("โ ุชู ูุชุญ ุงูููุฏูู ุจูุฌุงุญ.")

            # ุงูุงูุชุธุงุฑ ููููุงู ูุชุฃูุฏ ูู ุชุญููู ุงูููุฏูู
            await asyncio.sleep(5)

            # ุชุดุบูู ุงูููุฏูู
            print("๐ฅ ุชุดุบูู ุงูููุฏูู...")
            play_button = await page.query_selector("button[aria-label='Play']")
            if play_button:
                await play_button.click()

            # ูุดุงูุฏุฉ ุงูููุฏูู ููุฏุฉ 35-50 ุซุงููุฉ
            watch_time = random.randint(35, 50)
            print(f"โณ ูุดุงูุฏุฉ ุงูููุฏูู ููุฏุฉ {watch_time} ุซุงููุฉ...")
            await asyncio.sleep(watch_time)

            # ุงูุชูุงุนู ูุน ุงูููุฏูู (ุงุฎุชูุงุฑู)
            if random.choice([True, False]):
                print("๐ ุชุบููุฑ ุฌูุฏุฉ ุงูููุฏูู...")
                quality_menu = await page.query_selector("button[aria-label='Settings']")
                if quality_menu:
                    await quality_menu.click()
                    await asyncio.sleep(2)  # ุงูุชุธุงุฑ ูุงุฆูุฉ ุงูุฌูุฏุฉ
                    quality_option = await page.query_selector("span:has-text('480p')")
                    if quality_option:
                        await quality_option.click()

            print("โ ุชู ุฅููุงุก ุงููุดุงูุฏุฉ ุจูุฌุงุญ.")
        except Exception as e:
            print(f"โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงููุดุงูุฏุฉ: {e}")
        finally:
            # ุฅุบูุงู ุงููุชุตูุญ
            await browser.close()

def start(update: Update, context: CallbackContext) -> None:
    """
    ุฃูุฑ /start ูุนุฑุถ ุฑุณุงูุฉ ุชุฑุญูุจ.
    """
    update.message.reply_text(
        "๐ ุฃููุงู ุจู ูู ุฑูุจูุช ูุดุงูุฏุงุช YouTube.\n"
        "ุฃุฑุณู ุฑุงุจุท ููุฏูู YouTube ูุจุฏุก ูุดุงูุฏุฉ ุชููุงุฆูุฉ."
    )

def watch(update: Update, context: CallbackContext) -> None:
    """
    ุฃูุฑ ูุงุณุชูุจุงู ุฑุงุจุท ุงูููุฏูู ูุจุฏุก ุงููุดุงูุฏุฉ.
    """
    if len(context.args) < 1:
        update.message.reply_text("โ ูุฑุฌู ุฅุฑุณุงู ุฑุงุจุท ุงูููุฏูู ุจุนุฏ ุงูุฃูุฑ.")
        return

    video_url = context.args[0]
    update.message.reply_text(f"๐ ุจุฏุก ุงููุดุงูุฏุฉ ููููุฏูู: {video_url}")

    # ุชุดุบูู ูุธููุฉ ุงููุดุงูุฏุฉ ุจุงุณุชุฎุฏุงู asyncio
    asyncio.run(watch_youtube_video(video_url))

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    ุฃูุฑ /start ูุนุฑุถ ุฑุณุงูุฉ ุชุฑุญูุจ.
    """
    await update.message.reply_text(
        "๐ ุฃููุงู ุจู ูู ุฑูุจูุช ูุดุงูุฏุงุช YouTube.\n"
        "ุฃุฑุณู ุฑุงุจุท ููุฏูู YouTube ูุจุฏุก ูุดุงูุฏุฉ ุชููุงุฆูุฉ."
    )

# ูุธููุฉ ุฃูุฑ /watch
async def watch(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    ุฃูุฑ /watch ูุงุณุชูุจุงู ุฑุงุจุท ุงูููุฏูู ูุจุฏุก ุงููุดุงูุฏุฉ.
    """
    if not context.args:
        await update.message.reply_text("โ ูุฑุฌู ุฅุฑุณุงู ุฑุงุจุท ุงูููุฏูู ุจุนุฏ ุงูุฃูุฑ.")
        return

    video_url = context.args[0]
    await update.message.reply_text(f"๐ ุจุฏุก ุงููุดุงูุฏุฉ ููููุฏูู: {video_url}")

    # ููุง ููููู ุงุณุชุฏุนุงุก ูุธููุฉ ูุดุงูุฏุฉ ุงูููุฏูู (watch_youtube_video)
    # ูุซุงู:
    # await watch_youtube_video(video_url)

# ุงููุธููุฉ ุงูุฑุฆูุณูุฉ ูุชุดุบูู ุงูุฑูุจูุช
def main() -> None:
    """
    ุชุดุบูู ุงูุฑูุจูุช.
    """
    # ุถุน ููุง ุชููู ุงูุจูุช ุงูุฎุงุต ุจู
    TELEGRAM_TOKEN = "    TELEGRAM_TOKEN = "7876191804:AAFV_DzkJRNHEHgVKTH-X3ubHGbDOYCOpYA"

    # ุฅุนุฏุงุฏ ุงูุชุทุจูู
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # ุฅุถุงูุฉ ุงูุฃูุงูุฑ
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("watch", watch))

    # ุชุดุบูู ุงูุฑูุจูุช
    print("๐ค ูุนูู ุงูุฑูุจูุช ุงูุขู...")
    application.run_polling()

if __name__ == "__main__":
    main()
